
Importing function from the module:
    >>> add_integer = __import__('0-add_integer').add_integer

Adding two positive integers (a = 5 and b = 6)
    >>> add_integer(5, 6)
    11

Adding one positive and one negative integer (a = 4 and b = -3)
    >>> add_integer(4, -3)
    1

Adding two negative integers (a = -1 and b = -4)
    >>> add_integer(-1, -4)
    -5

Adding two integers with the second being the same as the default value of b (a = 5 and b = 98)
    >>> add_integer(5)
    103

Adding a positive float and a positive integer (a = 3.5565 and b = 5)
    >>> add_integer(3.5565, 5)
    8

Adding a float and an integer where the integer is equal to the default value of b (a = 12.475 and b = 98)
    >>> add_integer(12.475)
    110

Adding a positive float and a negative integer (a = 8.5 and b = -2)
	    >>> add_integer(8.5, -2)
	    6

Adding two negative floats (a = -10.45 and b = -2.65)
	    >>> add_integer(-10.45, -2.65)
	    -12

Adding an integer number and a string (a = 8 and b = "Ahmed")
    >>> add_integer(8, "Ahmed")
    Traceback (most recent call last):
	      ...
    TypeError: b must be an integer

Passing None to a
    >>> add_integer(None)
    Traceback (most recent call last):
	      ...
    TypeError: a must be an integer

Adding a letter and a number (a = 'y' and b = 12)
    >>> add_integer('y', 12)
    Traceback (most recent call last):
              ...
    TypeError: a must be an integer

Adding two letters (a = 'c' and b = 'm')
    >>> add_integer('c', 'm')
    Traceback (most recent call last):
              ...
    TypeError: a must be an integer

Adding a tuple
    >>> add_integer((1, 1))
    Traceback (most recent call last):
              ...
    TypeError: a must be an integer

Adding a number and a list
    >>> add_integer(123, [])
    Traceback (most recent call last):
	      ...
    TypeError: b must be an integer

Passing a only one string
    >>> add_integer("Hello")
    Traceback (most recent call last):
	      ...
    TypeError: a must be an integer

Adding two float numbers (a = 8.92 and b = 4.42)
    >>> add_integer(8.92, 4.42)
    12

Case Overflow:

    >>> add_integer(float('inf'), 0)
    Traceback (most recent call last):
    	      ...
    OverflowError: cannot convert float infinity to integer

Case Overflow 2:

    >>> add_integer(float('inf'), float('-inf'))
    Traceback (most recent call last):
    	      ...
    OverflowError: cannot convert float infinity to integer

Case NaN 1:

    >>> add_integer(0, float('nan'))
    Traceback (most recent call last):
    	      ...
    ValueError: cannot convert float NaN to integer

Case NaN 2:

    >>> add_integer(float('nan'))
    Traceback (most recent call last):
    	      ...
    ValueError: cannot convert float NaN to integer